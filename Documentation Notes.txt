Initial Requirements:

 1. The database keeps track of CUSTOMERs, STAFFs, ITEMs (eBooks, Movies, periodicals), SUBJECTs, AUTHORs, PUBLISHERs, DIRECTORs, and etc. 
 2. Each CUSTOMER has a unique IdNo (assume this is a unique integer generated by the system for each new CUSTOMER, such as 1, 2, 3, …), a Name (assume this is string consisting of an single initial and last name only for simplicity, such as “J.Smith” or “R.Wong”), a PhoneNo (a string of 12 characters such as “817-333-6000”), an Address (a string of MAX 256 characters), an Email (a UNIQUE string of MAX 100 characters), an UserName (a UNIQUE string of between 8-12 characters), a Password (a string of between 8-12 characters), and CreatedDate (Datetime), and etc. 
 
3. The database keeps track of ITEMs available for CUSTOMERs, which are categorized based on their type. There are several types: BOOK, PERIODICALS (publication), FILM, etc. 
 
4. Each ITEM (e.g. eBOOK) has an ITEM_ID (a unique number for each item – assume it is a number 1001, 1002, 1003, …), Subject (Science, Romance, fiction, Art, History, Recipes, Travel, etc.), Description (a description for each item), Item_Image (e.g. an image for each Book or periodical). 
 
5. The database will keep track of the current (active) ORDERS as well as available ITEMS. For each ORDER, the information will include the specific ITEM and CUSTOMER as well as the CUSTOMER_PAYMENTS. OrderDate, and total price, which is a derived value that can be calculated from the other information. 
 


Missing Requirements:

1. This is assumed to be a strictly online/electronic bookstore. No hard-copies.

2. All customers MUST have an address, but may or may not have a phone number. 

3. Assume only one unqiue email-address allowed per customer or staff member.

4. Customer IdNo is auto-generated when customer first opens account (i.e. registers) with bookstore. This numbering allows tracking the number of customers for special offers, for example, the 100th customer to register gets a discount (IdNo=100). Although Customer IDNo is unique, the unique Username attribute is used as a primary key for CUSTOMER table and STAFF table.

5. Every item must be categorized into (at most) one specific genre. e.g. horror, thriller, research, nature, physics, etc.

6. Every item must have at least one creator. created may be an author, a publisher, a company or any combination of the three. For example, Book "ABC" is written by authors Mr.X, Ms.Y and published by Firm.P, and owned/distributed by company.Amazon. Or item X might be created by Company Universal Studios alone with no publisher or specific author, etc...

7. In Company (subclass of Creator), HQ_location stands for head-quarter location.

8. In ITEM table, Availability is denoted by 1,0, where 1 means available, 0 means unavailable. Quantity of item available does not matter since it is strictly an online bookstore with infinite digital copies of available items.

9. In Item table, attribute 'Category' defines the subclasses of Book, Film or Periodical. 

10. Every item must have a language specified which is the primary language in which it is written/filmed.

11. In Orders table, Order_Date is the date when the item was purchased (after payment confirmation). Total_Price is a derived attribute from item_price and quantity of each item. Order tuples are logged in to the ORDERS table only after the purchase has been confirmed and the customer checked the item out of the shopping cart.

12. In TV_Show under FILM, the attribute 'Network' is the channel/tv/web-network that the TV Show airs/aired on. e.g. MSNBC, YouTube Red, NetFlix, ABC, Fox, CBS, etc. Network attribute can be null since some independent, low-budget tv-shows might not have a network. 

13. TV_SHOWS are only sold by the season, not by the episode.

14. For USER entity, Phone and Address are shown as multi-valued attributes in the EER schema. But in the actual logical relational SQL implementation, USER table features Phone and Address as single-valued VARCHAR attributes for simplicity purposes. 

15. Assume that staff and customer subclasses can be overlapping since a staff can also be a customer and vice versa.




EER-to-Relational-Schema Mapping Choice Specifications:

1. Username is used as primary key in BKSTR_USER table, since it is common and mandatory to both subclasses STAFF and CUSTOMER to have a valid, UNIQUE username.

2. Director and Producer are not included as subclasses in CREATOR superclass, since they do not "create" the intellectual content of the film itself like an author, or manifest/distribute the film like a publisher, or have ownership over the material like a company. And we assumed that aongst ITEMS, only films will have (at most) one director and (at most) one producer. For these two reasons, it is more feasible to include Director and Producer in film table as attributes rather than in creator table for all ITEMs.

3. A creator of an item is a superclass with attribute-defined subclasses - the attribute 'Type' defines creator as either an Author, a Publisher or a Company. An item may be created by any cobination of the three. Created_By table is M-N, since e.g. multiple authors can write one book, and multiple books can be written by one author and so on for publishers, companies, periodicals and films.